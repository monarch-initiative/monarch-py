name: Test

on:
  push:
    branches: [ main, remove-sh ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      matrix: 
        python-version: ['3.8', '3.9', '3.10', '3.11']
        os: [ "ubuntu-latest", "windows-latest" ]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-pip-wheels
        uses: actions/cache@v3
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      
      - name: Install library
        run: poetry install --no-interaction
      
      - name: Run tests
      - run: |
          source $VENV
          pytest tests/unit
          pytest tests/integration/test_association_sql.py
          pytest tests/integration/test_entity_sql.py


# name: CI

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

#   workflow_dispatch:

# jobs:
#   test-linux:
#     name: test py${{ matrix.python-version }} on Linux
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         python-version: ['3.8', '3.9', '3.10', '3.11']
#     env:
#       PYTHON: ${{ matrix.python-version }}
#       OS: ubuntu

#     steps:
#       - uses: actions/checkout@v3

#       - name: set up python
#         uses: actions/setup-python@v3
#         with:
#           python-version: ${{ matrix.python-version }}

#       - name: install poetry
#         run: curl -sSL https://install.python-poetry.org | python3 -

#       - name: poetry install
#         run: poetry install

#       - name: run tests
#         run: |
#           poetry run python -m pytest tests/unit
#           poetry run python -m pytest tests/integration/test_association_sql.py
#           poetry run python -m pytest tests/integration/test_entity_sql.py

#   test-windows:
#     name: test py${{ matrix.python-version }} on Windows
#     runs-on: windows-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         python-version: ['3.8', '3.9', '3.10', '3.11']
#     env:
#       PYTHON: ${{ matrix.python-version }}
#       OS: windows

#     steps:
#       - uses: actions/checkout@v3

#       - name: set up python
#         uses: actions/setup-python@v3
#         with:
#           python-version: ${{ matrix.python-version }}

#       - name: install poetry
#         run: (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python3 -

#       - name: poetry install
#         run: poetry install

#       - name: run tests
#         run: |
#           poetry run python -m pytest tests/unit
#           poetry run python -m pytest tests/integration/test_association_sql.py
#           poetry run python -m pytest tests/integration/test_entity_sql.py
