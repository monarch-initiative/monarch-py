name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  test:
    strategy:
      matrix: 
        python-version: ['3.8', '3.9', '3.10', '3.11']
        os: [ "ubuntu-latest", "windows-latest" ]   
    defaults:
      run:
        shell: bash

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-pip-wheels
        uses: actions/cache@v3
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      
      - name: Install library
        run: poetry install --no-interaction
      
      - name: Run tests (unit)
        run: |
          source $VENV
          pytest tests/unit

      # TODO: Rewrite SQL tests
      # - name: Run tests (SQL backend)
      #   run: |
      #     source $VENV
      #     pytest tests/integration/ -k 'sql'

      # TODO: Mock Solr backend
      #
      # - name: Run tests (Solr backend)
      #   run: |
      #     source $VENV
      #     pytest tests/integration/ -k 'solr'


